{"version":3,"sources":["components/PetList.js","views/Main.js","components/PetForm.js","views/New.js","views/Detail.js","views/Update.js","App.js","serviceWorker.js","index.js"],"names":["props","to","pets","map","pet","idx","key","name","type","_id","useState","setPets","loaded","setLoaded","useEffect","axios","get","then","res","data","PetList","setName","setType","description","setDescription","skill_1","setSkill_1","skill_2","setSkill_2","skill_3","setSkill_3","errors","setErrors","onSubmit","e","preventDefault","post","console","log","navigate","catch","err","errorResponse","response","errorArr","Object","keys","properties","message","push","index","onChange","target","value","PetForm","setPet","id","deletePet","petId","delete","filter","removeFromDom","onClick","put","App","className","Main","path","New","Detail","Update","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e6f690a7.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nexport default props => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>These pets are looking for a good home</h3>\r\n            <Link to=\"/pets/new\">add a pet to the shelter</Link>\r\n            <table>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Type</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                {props.pets.map((pet, idx)=>{\r\n                return <tr key={idx}>\r\n                    <td>{pet.name}</td>\r\n                    <td>{pet.type}</td>\r\n                    <td>\r\n                        <Link to={ \"pets/\" + pet._id }>Detail</Link>\r\n                        <hr/>\r\n                        <Link to={ \"pets/\" + pet._id + \"/edit\" }>Edit</Link>\r\n                    </td>\r\n                </tr>\r\n                })}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PetList from '../components/PetList';\r\nimport axios from 'axios';\r\n\r\nexport default () => {\r\n\r\n    const [pets, setPets] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/pets')\r\n            .then(res=>{\r\n                setPets(res.data);\r\n                setLoaded(true);\r\n            });\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            {loaded && <PetList pets={pets}/>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nexport default () => {\r\n\r\n    //keep track of what is being typed via useState hook\r\n    const [ name, setName ] = useState(\"\"); \r\n    const [ type, setType ] = useState(\"\");\r\n    const [ description, setDescription ] = useState(\"\");\r\n    const [ skill_1, setSkill_1 ] = useState(\"\");\r\n    const [ skill_2, setSkill_2 ] = useState(\"\");\r\n    const [ skill_3, setSkill_3 ] = useState(\"\");\r\n\r\n    const [ errors, setErrors ] = useState([]);\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:8000/api/pets', {\r\n            name,\r\n            type,\r\n            description,\r\n            skill_1,\r\n            skill_2,\r\n            skill_3\r\n        })\r\n            .then(res=> {\r\n                console.log(res);\r\n                navigate(\"/\");\r\n            })\r\n            .catch(err=> {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    console.log(errorResponse[key].properties.message);\r\n                    errorArr.push(errorResponse[key].properties.message);\r\n                }\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Know a pet needing a home?</h3>\r\n            <Link to=\"/\">back to home</Link>\r\n            <form onSubmit={ onSubmitHandler }>\r\n                {errors.map((err, index) => <p key={ index}>{err}</p>)}\r\n                <p>\r\n                    <label>Name</label><br/>\r\n                    <input type=\"text\" onChange = {(e)=>setName(e.target.value)}/>\r\n                </p>\r\n                <p>\r\n                    <label>Type</label><br/>\r\n                    <input type=\"text\" onChange = {(e)=>setType(e.target.value)}/>\r\n                </p>\r\n                <p>\r\n                    <label>Description</label><br/>\r\n                    <input type=\"text\" onChange = {(e)=>setDescription(e.target.value)}/>\r\n                </p>\r\n                <p>\r\n                    <label>Skill 1</label><br/>\r\n                    <input type=\"text\" onChange = {(e)=>setSkill_1(e.target.value)}/>\r\n                </p>\r\n                <p>\r\n                    <label>Skill 2</label><br/>\r\n                    <input type=\"text\" onChange = {(e)=>setSkill_2(e.target.value)}/>\r\n                </p>\r\n                <p>\r\n                    <label>Skill 3</label><br/>\r\n                    <input type=\"text\" onChange = {(e)=>setSkill_3(e.target.value)}/>\r\n                </p>\r\n                <input type=\"submit\" value=\"Add Pet\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PetForm from '../components/PetForm';\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <PetForm />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nexport default props => {\r\n\r\n    const [pet, setPet] = useState({});\r\n    const [pets, setPets] = useState([]);\r\n\r\n    const removeFromDom = petId => {\r\n        setPets(pets.filter(pet => pet._id != petId));\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pets/\" + props.id)\r\n            .then(res => setPet(res.data))\r\n    }, [])\r\n\r\n    const deletePet = petId => {\r\n        axios.delete('http://localhost:8000/api/pets/' + petId)\r\n            .then(res => {\r\n                removeFromDom(petId);\r\n                navigate(\"/\");\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Details about: { pet.name }</h3>\r\n            <button onClick={ (e) => { deletePet(pet._id) }}>Adopt Pet</button>\r\n            <Link to=\"/\">back to home</Link>\r\n            <p>Pet Type: { pet.type }</p>\r\n            <p>Description: { pet.description }</p>\r\n            <p>Skills:\r\n                <ul>\r\n                    <li>{ pet.skill_1 }</li>\r\n                    <li>{ pet.skill_2 }</li>\r\n                    <li>{ pet.skill_3 }</li>\r\n                </ul>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nexport default props => {\r\n\r\n    const { id } = props;\r\n\r\n    const [ name, setName ] = useState(\"\"); \r\n    const [ type, setType ] = useState(\"\");\r\n    const [ description, setDescription ] = useState(\"\");\r\n    const [ skill_1, setSkill_1 ] = useState(\"\");\r\n    const [ skill_2, setSkill_2 ] = useState(\"\");\r\n    const [ skill_3, setSkill_3 ] = useState(\"\");\r\n\r\n    const [ errors, setErrors ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pets/' + id)\r\n            .then(res => {\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDescription(res.data.description);\r\n                setSkill_1(res.data.skill_1);\r\n                setSkill_2(res.data.skill_2);\r\n                setSkill_3(res.data.skill_3);\r\n            })\r\n    }, [])\r\n\r\n    const updatePet = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/pets/' + id, {\r\n            name,\r\n            type,\r\n            description,\r\n            skill_1,\r\n            skill_2,\r\n            skill_3\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/\");\r\n            })\r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    console.log(errorResponse[key].properties.message);\r\n                    errorArr.push(errorResponse[key].properties.message);\r\n                }\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Edit { name }</h3>\r\n            <Link to=\"/\">back to home</Link>\r\n            <form onSubmit={ updatePet }>\r\n                {errors.map((err, index) => <p key={ index}>{err}</p>)}\r\n                <p>\r\n                    <label>Name</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={ name }\r\n                        onChange = {(e)=>setName(e.target.value)}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label>Type</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"type\"\r\n                        value={ type }\r\n                        onChange = {(e)=>setType(e.target.value)}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label>Description</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        value={ description }\r\n                        onChange = {(e)=>setDescription(e.target.value)}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label>Skill 1</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"skill_1\"\r\n                        value={ skill_1 }\r\n                        onChange = {(e)=>setSkill_1(e.target.value)}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label>Skill 2</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"skill_2\"\r\n                        value={ skill_2 }\r\n                        onChange = {(e)=>setSkill_2(e.target.value)}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label>Skill 3</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"skill_3\"\r\n                        value={ skill_3 }\r\n                        onChange = {(e)=>setSkill_3(e.target.value)}\r\n                    />\r\n                </p>\r\n                <input type=\"submit\" value=\"Update Pet\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Main from './views/Main';\nimport New from './views/New';\nimport Detail from './views/Detail';\nimport { Router } from '@reach/router';\nimport Update from './views/Update';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n      <Router>\n        <Main path=\"/\" />\n        <New path=\"pets/new\" />\n        <Detail path=\"pets/:id\" />\n        <Update path=\"pets/:id/edit\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}